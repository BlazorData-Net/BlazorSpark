@page "/{requestGuid:guid?}"
@using BlazorDatasheet
@using BlazorDatasheet.Core
@using BlazorDatasheet.Core.Data

@inject NavigationManager NavigationManager
@inject StorageService StorageService

<h3>Latest Queue Message</h3>

@if (!requestGuid.HasValue)
{
    <p>No message received yet.</p>
}
else
{
    <p>@requestGuid.Value.ToString()</p>
}

@if (sheet is not null)
{
    <Datasheet Sheet="sheet" />
}

@code {
    [Parameter]
    public Guid? requestGuid { get; set; }
    private string CurrentGuid { get; set; }
    private const string BlobContainer = "current-container";
    private Sheet sheet;

    protected override async Task OnInitializedAsync()
    {
        if (requestGuid.HasValue)
        {
            // Set the current GUID
            CurrentGuid = requestGuid.Value.ToString();

            // Read existing blob
            var existing = await StorageService.ReadBlobAsync(BlobContainer, CurrentGuid);

            // Upload current URL as the “response”
            await StorageService.UploadBlobAsync(BlobContainer, CurrentGuid, NavigationManager.Uri);

            // Load the data sheet
            LoadDataSheet();
        }
    }

    private void LoadDataSheet()
    {
        sheet = new Sheet(3, 3);
    }
}