@page "/"
@using BlazorDatasheet
@using BlazorDatasheet.Core
@using BlazorDatasheet.Core.Data
@inject StorageService StorageService
@inject IConfiguration Configuration

<PageTitle>Home</PageTitle>

<button class="btn btn-primary" @onclick="CreateRequest">Load Data</button>
<br />
<br />
@if (LoadIframe)
{
    <div style="display: flex; flex-direction: column; height: 100vh;">
        <iframe style="width: 100%; height: 100%;" src="@IFrameURL"></iframe>
    </div>
}

@code {
    private bool LoadIframe = false;
    private string WebContainerUrl = "";
    private string IFrameURL = "";
    private string CurrentGUID = "";
    private const string ContainerName = "current-container";

    protected override void OnInitialized()
    {
        WebContainerUrl = Configuration["ContainerUrl"];
    }

    private async Task CreateRequest()
    {
        // Create a new GUID for the request
        CurrentGUID = Guid.NewGuid().ToString();

        // Write to Blob Storage
        await StorageService.UploadBlobAsync(ContainerName, CurrentGUID, $"Created on {DateTime.UtcNow}");

        // Load the Iframe
        WebContainerUrl = Configuration["ContainerUrl"];
        IFrameURL = $"{WebContainerUrl}{CurrentGUID}";
        LoadIframe = true;
    }
}